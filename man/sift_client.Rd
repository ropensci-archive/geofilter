% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sift_client.R
\name{sift_client}
\alias{sift_client}
\title{Sift geojson - low level client}
\usage{
sift_client(x, query)
}
\arguments{
\item{x}{input, one of character string, json, list, or ...}

\item{query}{query}
}
\value{
an object of class \code{character}
}
\description{
Sift geojson - low level client
}
\examples{
library(jsonlite)
x <- geofilter_data$filter_features
prettify(x)
sift_client(x, ".")
sift_client(x, "keys")


library("leaflet")
library("geojson")

# get sample data
file <- system.file("examples", "zillow_or.geojson", package = "geofilter")

# plot as is
dat <- jsonlite::fromJSON(file, FALSE)
leaflet() \%>\%
  addTiles() \%>\%
  addGeoJSON(dat) \%>\%
  setView(-122.8, 44.8, zoom = 8)

# filter to features in Multnomah County only
json <- paste0(readLines(file), collapse = "")
json2 <-
 sift_client(json, '.features[] | select(.properties.COUNTY == "Multnomah")')
dat <- jsonlite::fromJSON(json2, FALSE)
leaflet() \%>\%
  addTiles() \%>\%
  addGeoJSON(dat) \%>\%
  setView(-122.6, 45.5, zoom = 10)

x <- "{\\"type\\":\\"FeatureCollection\\",\\"features\\":[
 {\\"type\\":\\"Feature\\",\\"geometry\\":{\\"type\\":\\"Point\\",\\"coordinates\\":
 [-99.74,32.45]},\\"properties\\":{}}]}"
x <- as.geojson(x)
sift_client(x, ".")
sift_client(x, "keys")

data(geofilter_data)
x <- geofilter_data$polygons_average
x <- as.geojson(x)
sift_client(x, ".")
sift_client(x, "keys")
sift_client(x, ".[]")
sift_client(x, ".features")
sift_client(x, ".features[]")
sift_client(x, ".features[].type")
sift_client(x, ".features[].properties")
sift_client(x, ".features[].geometry[]")
}
